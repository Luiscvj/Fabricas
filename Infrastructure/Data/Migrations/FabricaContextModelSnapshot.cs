// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(FabricaContext))]
    partial class FabricaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Articulo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Articulo", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Cliente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Limit_Credito")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Core.Entities.DIreccionCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("DIreccionCliente");
                });

            modelBuilder.Entity("Core.Entities.Fabrica", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email_Contacto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Num_Articulos")
                        .HasColumnType("bigint");

                    b.Property<string>("Num_Contacto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Fabrica");
                });

            modelBuilder.Entity("Core.Entities.FabricaArticulo", b =>
                {
                    b.Property<string>("ArticulosId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FabricaId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ArituculoId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Num_ExistenciaArticulo")
                        .HasColumnType("bigint");

                    b.HasKey("ArticulosId", "FabricaId");

                    b.HasIndex("FabricaId");

                    b.ToTable("FabricaArticulo");
                });

            modelBuilder.Entity("Core.Entities.Pedido", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ArticuloId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Cantidad_Pedido")
                        .HasColumnType("bigint");

                    b.Property<string>("ClienteId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DIreccionClienteId")
                        .HasColumnType("int");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DIreccionClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Core.Entities.DIreccionCliente", b =>
                {
                    b.HasOne("Core.Entities.Cliente", "Cliente")
                        .WithMany("DIreccionClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Core.Entities.FabricaArticulo", b =>
                {
                    b.HasOne("Core.Entities.Articulo", null)
                        .WithMany("FabricaArticulos")
                        .HasForeignKey("ArticulosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Fabrica", null)
                        .WithMany("FabricaArticulos")
                        .HasForeignKey("FabricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Pedido", b =>
                {
                    b.HasOne("Core.Entities.Articulo", "Arituculo")
                        .WithMany("Pedidos")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Core.Entities.DIreccionCliente", "DIreccionCliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("DIreccionClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arituculo");

                    b.Navigation("Cliente");

                    b.Navigation("DIreccionCliente");
                });

            modelBuilder.Entity("Core.Entities.Articulo", b =>
                {
                    b.Navigation("FabricaArticulos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Core.Entities.Cliente", b =>
                {
                    b.Navigation("DIreccionClientes");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Core.Entities.DIreccionCliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Core.Entities.Fabrica", b =>
                {
                    b.Navigation("FabricaArticulos");
                });
#pragma warning restore 612, 618
        }
    }
}
